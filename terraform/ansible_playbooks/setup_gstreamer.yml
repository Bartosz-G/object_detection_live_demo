---
- name: Install and set up GStreamer and related packages
  hosts: webservers
  become: yes
  remote_user: ubuntu

  tasks:
    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes

    - name: Upgrade all apt packages
      ansible.builtin.apt:
        upgrade: dist

    - name: Install GStreamer and base plugins
      ansible.builtin.apt:
        name:
          - gstreamer1.0-plugins-base
          - gstreamer1.0-tools
          - gstreamer1.0-plugins-good
        state: present

    - name: Install GStreamer development packages
      ansible.builtin.apt:
        name:
          - libgstreamer1.0-dev
          - libgstreamer-plugins-base1.0-dev
        state: present

    - name: Install Python3, venv, and pip
      ansible.builtin.apt:
        name:
          - python3-venv
          - python3-pip
        state: present

    - name: Install additional dependencies
      ansible.builtin.apt:
        name:
          - libcairo2-dev
          - pkg-config
          - python3-dev
          - libgirepository1.0-dev
        state: present

    - name: Install GStreamer Python bindings for Python 3
      ansible.builtin.apt:
        name: python3-gst-1.0
        state: present
        update_cache: yes

    - name: Check if a reboot is needed
      stat:
        path: /var/run/reboot-required
      register: reboot_required

    - name: Reboot the machine
      ansible.builtin.reboot:
        msg: "Rebooting for system updates"
        connect_timeout: 5
        reboot_timeout: 300
        pre_reboot_delay: 0
        post_reboot_delay: 30
        test_command: uptime
      when: reboot_required.stat.exists

    - name: Create a Python virtual environment
      ansible.builtin.command:
        cmd: python3 -m venv gstreamer-venv
        creates: gstreamer-venv

    - name: Create a Python virtual environment
      ansible.builtin.command:
        cmd: python3 -m venv /home/ubuntu/gstreamer-venv
        creates: /home/ubuntu/gstreamer-venv

    - name: Change ownership of the virtual environment
      ansible.builtin.file:
        path: /home/ubuntu/gstreamer-venv
        owner: ubuntu
        group: ubuntu
        recurse: yes

    - name: Install unzip
      ansible.builtin.apt:
        name: unzip
        state: present
        update_cache: yes


    - name: Download and install AWS CLI
      ansible.builtin.shell:
        cmd: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install
      args:
        creates: "/usr/local/bin/aws"



    - name: Synchronize contents from S3 bucket to src directory
      ansible.builtin.command:
        cmd: "aws s3 sync s3://{{ hostvars[inventory_hostname]['s3_code_files'] }} /home/ubuntu/src/"




